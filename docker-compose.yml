services:
  db:
    image: postgres:16
    container_name: eloquent_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: eloquent
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d eloquent"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - dbdata:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: eloquent_backend
    environment:
      PYTHON_ENV: dev
      POSTGRES_URL: postgresql+psycopg://postgres:postgres@db:5432/eloquent
      CORS_ORIGINS: '["http://localhost:3000"]'
      JWT_SECRET: replace_me_dev_secret
      JWT_EXPIRE_MIN: 30
      LLM_API_KEY: ${LLM_API_KEY:-}
      LLM_MODEL: ${LLM_MODEL:-gpt-4o-mini}
      PINECONE_API_KEY: ${PINECONE_API_KEY:-}
      PINECONE_INDEX: ${PINECONE_INDEX:-}
      PINECONE_HOST: ${PINECONE_HOST:-}
      EMBEDDING_MODEL: ${EMBEDDING_MODEL:-llama-text-embed-v2}
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: eloquent_frontend
    environment:
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    restart: unless-stopped

volumes:
  dbdata:
